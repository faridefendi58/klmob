function startToBuild() {
    jQuery(document).ready(function($) {
        build_chord();
        if ($('a.chord').length > 0) {
            var nada_dasar = clean_basic_tone($('a.chord').first().text());
            transpose(nada_dasar,nada_dasar);
        }

    });
}
function clean_basic_tone(nada_dasar) {
    if (nada_dasar.length > 1 && nada_dasar.charAt(1) != '#') {
        $('#switch-content').find('div').each(function () {
            if (!$(this).hasClass('font-size-14')) {
                $(this).text($(this).text()+nada_dasar.substr(1));
                $(this).removeClass('font-size-18').addClass('font-size-14');
            }
        });
        nada_dasar = nada_dasar.charAt(0);
    }
    if (nada_dasar.length > 2 && nada_dasar.charAt(1) == '#') {
        nada_dasar = nada_dasar.charAt(0)+'#';
    }
    return nada_dasar;
}
function transpose(basic_tone,new_basic_tone) {
    var bobots = ['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];
    var index_basic_tone = bobots.indexOf(basic_tone);
    var index_new_basic_tone = bobots.indexOf(clean_basic_tone(new_basic_tone));
    var transpose_val = (index_basic_tone - index_new_basic_tone)/2;
    $('a.chord').each(function () {
        var chord = $(this).text();
        var index = bobots.indexOf(chord);
        if (index < 0) {
            if (chord.length > 2) {
                if (chord.charAt(1) == '#') {
                    index = bobots.indexOf(chord.charAt(0)+chord.charAt(1));
                } else {
                    index = bobots.indexOf(chord.charAt(0));
                }
            } else if (chord.length == 2) {
                index = bobots.indexOf(chord.charAt(0));
            }
        }

        var selisih = index - transpose_val*2;
        if (selisih < 0) {
            selisih = bobots.length + selisih;
        } else {
            if (selisih > 11) {
                selisih = selisih - 12;
            }
        }

        var suffix = "";
        if (chord.length > 2) {
            suffix = chord.substr(1);
            if (chord.charAt(1) == '#') {
                suffix = chord.substr(2);
            }
        } else if (chord.length == 2) {
            if (chord.charAt(1) != '#') {
                suffix = chord.substr(1);
            }
        }

        var new_chord = bobots[selisih]+suffix;
        if (new_chord == 'E#')
            new_chord = 'F';
        if (new_chord == 'B#')
            new_chord = 'C';

        if ($(this).text().length > 0) {
            $(this).text(new_chord);
        }
        resetPosition();
    });
    setTimeout(function(){
        onAfterTransposed();
    }, 3000);
}
function build_chord() {
    $('body').find('a').each(function () {
        $(this).addClass($(this).text());
    });
    resetPosition();
}
function resetPosition() {
    $('body').find('a').each(function () {
        if ($(this).parent()[0].nodeName.toLowerCase() == 'sup') {
            if ($(this).text().length > 0) {
                $(this).parent().attr('style', 'width:0px;height:0px;display:inline-block;');
            } else {
                $(this).parent().attr('style', 'width:20px;height:0px;display:inline-block;');
            }
        }
    });
}
var item_keys = new Array();
function onAfterTransposed() {
        var the_keys = new Array();
        $('a.chord').each(function (i) {
            var chrd = $(this).text();
            if (chrd.charAt(1) == '#') {
                chrd = chrd.replace("#", "is");
            } else if (chrd.charAt(2) == '#') {
                chrd = chrd.replace("#", "is");
            }
            if (chrd.charAt(1) == '/') {
                chrd = chrd.replace("/", "-");
                if (chrd.charAt(3) == '#') {
                    chrd = chrd.replace("#", "is");
                }
            }
            if (chrd.charAt(2) == '/') {
                chrd = chrd.replace("/", "-");
                if (chrd.charAt(4) == '#') {
                    chrd = chrd.replace("#", "is");
                }
            } else if (chrd.charAt(3) == '/') {
				chrd = chrd.replace("/", "-");
                if (chrd.charAt(5) == '#') {
                    chrd = chrd.replace("#", "is");
                }
			}
            var src = "chords/" + chrd + '.webp';
            $(this).attr("alt", "Chord "+ chrd);
            $(this).attr("data-original-title", "<img src='"+ src +"' height='100px' />");
            if (!the_keys.includes(src) && chrd.length > 0) {
                the_keys.push(src);
                item_keys[src] = chrd;
            }
        });

        $('a.chord').tooltip({
            animated: 'fade',
            placement: 'bottom',
            html: true
        });
        $('a.chord').click(function () {
            $(this).tooltip({
                animated: 'fade',
                placement: 'bottom',
                html: true
            });
            return false;
        });
        buildTheChordList(the_keys);
}
function buildTheChordList(the_keys) {
        if (the_keys.length > 0) {
            var li = "";
            for (var i = 0, itemLen = the_keys.length; i < itemLen; i++) {
                li += "<li><img src='" + the_keys[i] + "' alt='Chord "+ item_keys[the_keys[i]] +"' height='80px'/></li>"
            }
            $('ul[id="chord-list"]').html(li);
            $('#chord-list-container').fadeIn(1000);
        }
}
String.prototype.replaceAll = function (stringFind, stringReplace) {
    var ex = new RegExp(stringFind.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"), "g");
    return this.replace(ex, stringReplace);
};

var is_desktop = false;
if (window.addEventListener)
    window.addEventListener("load", loadTransposeMethod, false);
else if (window.attachEvent)
    window.attachEvent("onload", loadTransposeMethod);
else window.onload = loadTransposeMethod;
function loadTransposeMethod() {
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            var is_desktop = false;
        } else {
            var is_desktop = true;
        }
        if (typeof(jQuery) !== undefined) {
            startToBuild();
        } else {
            setTimeout(function () {
                startToBuild();
            }, 3000);
        }
}
function autoScroll() {
    return false;
}
function openVideo() {
        var el = document.getElementById("media-container");
        if (el.length > 0) {
            el.scrollIntoView();
        } else {
            buildTheMedia(false);
            setTimeout(function () {
                var el = document.getElementById("media-container");
                el.scrollIntoView();
            }, 2000);
        }
        return false;
}